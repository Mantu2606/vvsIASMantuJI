@model FossTech.Models.Team

@{
    ViewData["Title"] = "Create";
}

<div class="col-sm-12">
    <div class="card">
        <div class="card-header pb-1">
            <h2>Add Teacher</h2>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
        </div>
        <div class="card-body">
            <form asp-action="Create" enctype="multipart/form-data">

                <div class="form-group mb-3 row">
                    <div class="col required">
                        <label asp-for="Image" class="control-label"></label>
                        <input type="file" accept="image/*" name="Image" class="form-control" style="border-radius: 10px;" onchange="checkImageSize(event)" />
                        <span asp-validation-for="Image" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" style="border-radius: 10px;" oninput="generateSlug()" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="Slug" class="control-label"></label>
                        <input asp-for="Slug" class="form-control" style="border-radius: 10px;" />
                        <span asp-validation-for="Slug" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group mb-3 row">
                    <div class="col">
                        <label asp-for="Subject" class="control-label"></label>
                        <input asp-for="Subject" class="form-control" style="border-radius: 10px;" />
                        <span asp-validation-for="Subject" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="Experience" class="control-label"></label>
                        <input asp-for="Experience" class="form-control" style="border-radius: 10px;" />
                        <span asp-validation-for="Experience" class="text-danger"></span>
                    </div>
                    <div class="col">
                        <label asp-for="Designation" class="control-label"></label>
                        <input asp-for="Designation" class="form-control" style="border-radius: 10px;" />
                        <span asp-validation-for="Designation" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea id="editor" asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SortOrder" class="control-label"></label>
                    <input asp-for="SortOrder" class="form-control" style="border-radius: 10px;" />
                    <span asp-validation-for="SortOrder" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-info">Back to List</a>
    </div>
</div>

@section styles
{
    <link href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-select/css/bootstrap-select.css" rel="stylesheet" />
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>
    <script src="~/lib/bootstrap-select/js/bootstrap-select.min.js"></script>

    <script type="text/javascript" src="/lib/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        tinymce.init({
            selector: '#editor',
            plugins: [
                'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',
                'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',
                'table emoticons template paste help image code '
            ],
            toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify |' +
                'fontselect fontsizeselect | forecolor backcolor' +
                ' bullist numlist outdent indent | link image | print preview media fullpage | ' +
                'forecolor backcolor emoticons | help undo redo | image code',
            menu: {
                favs: { title: 'My Favorites', items: 'code visualaid | searchreplace | spellchecker | emoticons' }
            },
            menubar: 'favs file edit view insert format tools table help',

            images_upload_handler: function (blobInfo, success, failure) {
                var xhr, formData;

                xhr = new XMLHttpRequest();
                xhr.withCredentials = false;
                xhr.open('POST', '/FossTech/Teams/ImageUpload');

                xhr.onload = function () {
                    var json;

                    if (xhr.status != 200) {
                        failure('HTTP Error: ' + xhr.status);
                        return;
                    }

                    json = xhr.responseText;

                    success(json);

                };

                formData = new FormData();
                formData.append('file', blobInfo.blob(), blobInfo.filename());

                xhr.send(formData);
            }
        });


    </script>
    <script>
        function generateSlug() {
            var title = document.getElementById("Name").value;
            var slug = title.toLowerCase().replace(/[^a-zA-Z0-9 ]/g, "").replace(/ /g, "-");
            document.getElementById("Slug").value = slug;
            //oninput = "generateSlug()"
        }
    </script>
    <script>
        function checkImageSize(event) {
            const fileInput = event.target;
            if (fileInput.files && fileInput.files[0]) {
                const fileSize = fileInput.files[0].size; // Size in bytes
                const maxSize = 250 * 1024; // 250KB in bytes

                const errorMessageSpan = document.querySelector('[data-valmsg-for="Image"]');
                if (fileSize > maxSize) {
                    errorMessageSpan.textContent = "Please upload an image size up to 250KB.";
                    // Clear the file input to prevent submitting the form with an oversized image
                    fileInput.value = null;
                } else {
                    errorMessageSpan.textContent = ""; // Clear any previous error message
                }
            }
        }
        // onchange = "checkImageSize(event)"
    </script>

}
